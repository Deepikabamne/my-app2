{"version":3,"sources":["components/TextForm.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["useTextForm","props","text","setText","useState","_jsxs","children","className","style","color","mode","_jsx","heading","backgroundColor","value","onChange","event","target","id","rows","onClick","handleUpclick","newText","toUpperCase","showAlert","handleLoclick","toLowerCase","handleClearclick","handletextCopy","document","getElementById","select","navigator","clipboard","writeText","removeextraspc","split","join","length","filter","Boolean","Navbar","concat","href","title","type","togglemode","role","htmlFor","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitlise","msg","App","setMode","setAlert","message","setTimeout","_Fragment","body","TextForm","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.7983ef53.chunk.js","sourcesContent":["import React, {useState} from 'react'; \r\n\r\nexport default function useTextForm(props) {\r\n  const handleUpclick=() =>{\r\n   let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n   }\r\n   const handleLoclick=() =>{\r\n   let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n   }\r\n   const handleClearclick=() =>{\r\n    let newText = '';\r\n     setText(newText);\r\n     props.showAlert(\"cleared text\", \"success\");\r\n    }\r\n   const handleOnChanged=(event) =>{\r\n    setText(event.target.value);\r\n   }\r\n   const handletextCopy=() =>{\r\n   var text = document.getElementById('myBox');\r\n   text.select();\r\nnavigator.clipboard.writeText(text.value);\r\nprops.showAlert(\"copy to clipboard\", \"success\");\r\n   }\r\n   const removeextraspc=() =>{\r\n    let newText = text.split(/[ ]+/);\r\n     setText(newText.join(\" \"));\r\n     props.showAlert(\"removed extra space\", \"success\");\r\n    }\r\n  const [text, setText] = useState('');\r\n  // text=\"new text;\" wrong\r\n  // setText(\"new text\"); correct\r\n  return (\r\n    <div>\r\n      <div className='container' style= {{color: props.mode==='dark'?'white':'black'}}>\r\n    <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" style= {{backgroundColor: props.mode==='dark'?'#979292':'white', color: props.mode==='dark'?'white':'black'}} value={text} onChange={handleOnChanged} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n  <button className='btn btn-primary mx-1' onClick={handleUpclick}>Conver to Uppercase</button>\r\n  <button className='btn btn-primary mx-1' onClick={handleLoclick}>Conver to Lowercase</button>\r\n  <button className='btn btn-primary mx-1' onClick={handleClearclick}>Clear Text</button>\r\n  <button className='btn btn-primary mx-1' onClick={handletextCopy}>Copy Text</button>\r\n  <button className='btn btn-primary mx-1' onClick={removeextraspc}>remove extra space</button>\r\n\r\n  </div>\r\n  <div className='container' style= {{color: props.mode==='dark'?'white':'black'}}>\r\n<h1>text your summery</h1>\r\n<p> words {text.split(\" \").length} and characters {text.length}</p>\r\n<p> words {0.008* text.split(\" \").length} minuts read</p>\r\n<h2>sentance</h2>\r\n<p>{text.split(/[.?!]/g).filter(Boolean).length}</p>\r\n<h2>preview</h2>\r\n<p>{text.length>0?text:'Enter you text'}</p>\r\n  </div>\r\n  </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'About'\r\n};","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitlise = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitlise(props.alert.type)}</strong>: {props.alert.msg}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport TextForm from './components/TextForm';\nimport Navbar from './components/Navbar';\nimport React, {useState} from 'react'; \nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n    setAlert(null);   \n    }, 1000);\n  }\nconst togglemode =()=> {\n  if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor='#134ccd4d';\n    showAlert(\"dark mode enable\", \"success\");\n    document.title='textutils dark mode';\n  }\n  else\n  {\n    setMode('light');\n    document.body.style.backgroundColor='white';\n    showAlert(\"light mode enable\", \"success\");\n    document.title='textutils light mode';\n  }\n}\n\n  return (\n    <> \n{/* <Navbar title=\"texttules\" aboutText=\"About Text\" /> */}\n{/* <Navbar /> */}\n{/* <Router> */}\n<Navbar title=\"textutils\" mode={mode} togglemode={togglemode}/>\n<Alert alert={alert}/>\n<div className = \"container my-3\">\n{/* <Routes>\n        <Route path=\"/about\" element={ <About/>}>\n          </Route>\n          <Route path=\"/\" element={ <TextForm heading= 'Enter the Text' mode={mode} showAlert={showAlert}/>}>  \n          </Route>\n    </Routes>  */}\n    <TextForm heading= 'Enter the Text' mode={mode} showAlert={showAlert}/>\n</div>\n{/* </Router> */}\n</> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}